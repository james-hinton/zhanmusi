{"ast":null,"code":"var _jsxFileName = \"/home/james/Projects/github/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport '../assets/styles/Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState(null);\n\n  const handleChange = e => {\n    setSearchText(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(searchText);\n  }, [searchText]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange,\n      placeholder: \"Search or jump to...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"WUOcjNnHi8oQCHv+BpZ2Ek092Fo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/james/Projects/github/src/components/Search.js"],"names":["useState","useEffect","Search","searchText","setSearchText","handleChange","e","target","value","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,6BAAP;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,sBACI;AAAA,2BAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEE,YAA7B;AAA2C,MAAA,WAAW,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAOH,CAnBD;;GAAMH,M;;KAAAA,M;AAsBN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport '../assets/styles/Search.css'\n\nconst Search = () => {\n\n    const [searchText, setSearchText] = useState(null)\n\n    const handleChange = (e) => {\n        setSearchText(e.target.value)\n    }\n\n    useEffect(() => {\n        console.log(searchText)\n    }, [searchText])\n\n    return (\n        <>\n    \n            <input type=\"text\" onChange={handleChange} placeholder=\"Search or jump to...\"></input>\n\n        </>\n    )\n}\n\n\nexport default Search"]},"metadata":{},"sourceType":"module"}